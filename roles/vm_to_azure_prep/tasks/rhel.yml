---
# If using RHEL, ensure that subscription manager is registered prior to running.

- name: Upgrade all packages
  ansible.builtin.dnf:
    name: "*"
    state: latest

- name: Install required system packages
  ansible.builtin.dnf:
    name:
      - "libvirt"
      - "virt-install"
      - "libguestfs"
      - "libguestfs-tools"
    state: latest

- name: Install Hyper-V device drivers
  ansible.builtin.copy:
    src: hv.conf
    dest: /etc/dracut.conf.d/
    mode: '0644'

- name: Regenerate the initramfs image
  ansible.builtin.command:
    cmd: "dracut -f -v --regenerate-all"
  register: vm_to_azure_prep_regen_initramfs
  changed_when: vm_to_azure_prep_regen_initramfs.rc == 0
  failed_when: vm_to_azure_prep_regen_initramfs.rc != 0

- name: Reboot the server
  ansible.builtin.reboot:
    reboot_timeout: 120
  register: vm_to_azure_prep_reboot

- name: Install required cloud packages
  ansible.builtin.dnf:
    name:
      - "cloud-init"
      - "hyperv-daemons"
      - "cloud-utils-growpart"
      - "gdisk"
      - "hyperv-daemons"
    state: latest

- name: Enable logging to the Hyper-V Data Exchange Service (KVP)
  ansible.builtin.copy:
    src: 10-azure-kvp.cfg
    dest: /etc/cloud/cloud.cfg.d/
    mode: '0644'

- name: Add Azure as a datasource
  ansible.builtin.copy:
    src: 91-azure_datasource.cfg
    dest: /etc/cloud/cloud.cfg.d/
    mode: '0644'

- name: Configure cloud-init logging
  ansible.builtin.copy:
    src: 05_logging.cfg
    dest: /etc/cloud/cloud.cfg.d/
    mode: '0644'

# From https://learn.microsoft.com/en-us/azure/virtual-machines/linux/create-upload-generic
# Configure Cloud-init to create swap.
# To format and create swap you have 2 options either:
# Pass this in as a cloud-init config every time you create a VM through customdata. This is the recommended method.  <-- this is why this block is commented out
# Use a cloud-init directive baked into the image that will do this every time the VM is created.
# Create cfg file to configure swap using Cloud-init:
# - name: configure swap using Cloud-init
#   ansible.builtin.copy:
#     src: 00-azure-swap.cfg
#     dest: /etc/cloud/cloud.cfg.d/
#     mode: '0644'

- name: Disable specific nouveau module
  ansible.builtin.lineinfile:
    path: /etc/modprobe.d/blocklist.conf
    regexp: ' nouveau'
    line: blacklist nouveau

- name: Disable specific lbm-nouveau module
  ansible.builtin.lineinfile:
    path: /etc/modprobe.d/blocklist.conf
    regexp: 'lbm-nouveau'
    line: blacklist lbm-nouveau

- name: Disable specific floppy module
  ansible.builtin.lineinfile:
    path: /etc/modprobe.d/blocklist.conf
    regexp: 'floppy'
    line: blacklist floppy

- name: Disable specific amdgpu module
  ansible.builtin.lineinfile:
    path: /etc/modprobe.d/blocklist.conf
    regexp: 'amdgpu'
    line: blacklist amdgpu

- name: Disable specific skx_edac module
  ansible.builtin.lineinfile:
    path: /etc/modprobe.d/blocklist.conf
    regexp: 'skx_edac'
    line: blacklist skx_edac

- name: Disable specific intel_cstate module
  ansible.builtin.lineinfile:
    path: /etc/modprobe.d/blocklist.conf
    regexp: 'intel_cstate'
    line: blacklist intel_cstate

- name: Remove network device rules
  ansible.builtin.file:
    path: /etc/udev/rules.d/70-persistent-net.rules
    state: absent

- name: Remove network device rules
  ansible.builtin.file:
    path: /etc/udev/rules.d/75-persistent-net-generator.rules
    state: absent

- name: Remove network device rules
  ansible.builtin.file:
    path: /etc/udev/rules.d/80-net-name-slot-rules
    state: absent

- name: Add Azure as a datasource
  ansible.builtin.copy:
    src: 68-azure-sriov-nm-unmanaged.rules
    dest: /etc/udev/rules.d/
    mode: '0644'

- name: Modify GRUB_TIMEOUT kernel boot parameters
  ansible.builtin.lineinfile:
    path: /etc/default/grub
    regexp: 'GRUB_TIMEOUT'
    line: 'GRUB_TIMEOUT=10'

- name: Modify GRUB_CMDLINE_LINUX kernel boot parameters
  ansible.builtin.lineinfile:
    path: /etc/default/grub
    regexp: 'GRUB_CMDLINE_LINUX'
    line: 'GRUB_CMDLINE_LINUX="loglevel=3 crashkernel=auto console=tty1 console=ttyS0 earlyprintk=ttyS0 rootdelay=300"'

- name: Modify GRUB_TIMEOUT_STYLE kernel boot parameters
  ansible.builtin.lineinfile:
    path: /etc/default/grub
    regexp: 'GRUB_TIMEOUT_STYLE'
    line: 'GRUB_TIMEOUT_STYLE=countdown'

- name: Modify GRUB_TERMINAL kernel boot parameters
  ansible.builtin.lineinfile:
    path: /etc/default/grub
    regexp: 'GRUB_TERMINAL'
    line: 'GRUB_TERMINAL="serial console"'

- name: Modify GRUB_SERIAL_COMMAND kernel boot parameters
  ansible.builtin.lineinfile:
    path: /etc/default/grub
    regexp: 'GRUB_SERIAL_COMMAND'
    line: 'GRUB_SERIAL_COMMAND="serial --speed=115200 --unit=0 --word=8 --parity=no --stop=1"'

- name: Regenerate the grub.cfg file
  ansible.builtin.command:
    cmd: "grub2-mkconfig -o /boot/grub2/grub.cfg"
  register: vm_to_azure_prep_regen_grub
  changed_when: vm_to_azure_prep_regen_grub.rc == 0
  failed_when: vm_to_azure_prep_regen_grub.rc != 0

- name: Add Azure CLI repository
  ansible.builtin.yum_repository:
    name: Azure CLI
    description: Azure CLI repo
    baseurl: https://packages.microsoft.com/yumrepos/azure-cli
    enabled: true
    gpgkey: https://packages.microsoft.com/keys/microsoft.asc
    gpgcheck: true

- name: Install required cloud packages
  ansible.builtin.dnf:
    name:
      - WALinuxAgent
      - azure-cli
    state: latest

- name: Enable waagent
  ansible.builtin.systemd:
    name: waagent
    enabled: true

- name: Enable cloud-init
  ansible.builtin.systemd:
    name: "cloud-init"
    enabled: true

- name: Modify waagent Provisioning.DeleteRootPassword parameters
  ansible.builtin.lineinfile:
    path: /etc/waagent.conf
    regexp: 'Provisioning\.DeleteRootPassword'
    line: 'Provisioning.DeleteRootPassword=y'

- name: Modify waagent ResourceDisk.Format parameters
  ansible.builtin.lineinfile:
    path: /etc/waagent.conf
    regexp: 'ResourceDisk\.Format'
    line: 'ResourceDisk.Format=n'

- name: Modify waagent ResourceDisk.EnableSwap parameters
  ansible.builtin.lineinfile:
    path: /etc/waagent.conf
    regexp: 'ResourceDisk\.EnableSwap'
    line: 'ResourceDisk.EnableSwap=n'

- name: Modify waagent Provisioning.Agent parameters
  ansible.builtin.lineinfile:
    path: /etc/waagent.conf
    regexp: 'Provisioning\.Agent'
    line: 'Provisioning.Agent=auto'

- name: Clean up the existing provisioning details.
  ansible.builtin.command:
    cmd: "waagent -force -deprovision"
  register: vm_to_azure_prep_waagent_deprovision
  changed_when: vm_to_azure_prep_waagent_deprovision.rc == 0
  failed_when: vm_to_azure_prep_waagent_deprovision.rc != 0

- name: Generate SSH host keys
  ansible.builtin.command:
    cmd: "ssh-keygen -A"
  register: vm_to_azure_prep_keygen
  changed_when: vm_to_azure_prep_keygen.rc == 0
  failed_when: vm_to_azure_prep_keygen.rc != 0

- name: Delete user accounts
  when:
    - vm_to_azure_prep_users is defined
    - vm_to_azure_prep_users | length > 0
  ansible.builtin.user:
    name: "{{ item }}"
    state: absent
    remove: true
  loop: "{{ vm_to_azure_prep_users }}"

- name: Delete waagent log
  ansible.builtin.file:
    path: /var/log/waagent.log
    state: absent

- name: Run cloud-init cloud
  ansible.builtin.command:
    cmd: "cloud-init clean"
  register: vm_to_azure_cloud_init_clean
  changed_when: vm_to_azure_cloud_init_clean.rc == 0
  failed_when: vm_to_azure_cloud_init_clean.rc != 0

- name: Deprovision user
  ansible.builtin.command:
    cmd: "waagent -force -deprovision+user"
  register: vm_to_azure_deprovision_user
  changed_when: vm_to_azure_deprovision_user.rc == 0
  failed_when: vm_to_azure_deprovision_user.rc != 0

- name: Delete bash history
  ansible.builtin.file:
    path: ~/.bash_history
    state: absent

- name: Clear history
  ansible.builtin.command:
    cmd: "export HISTSIZE=0"
  register: vm_to_azure_prep_clear_history
  changed_when: vm_to_azure_prep_clear_history.rc == 0
  failed_when: false
