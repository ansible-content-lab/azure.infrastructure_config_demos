---
# The steps defined in this file are derived from https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html/deploying_rhel_8_on_microsoft_azure/assembly_deploying-a-rhel-image-as-a-virtual-machine-on-microsoft-azure_cloud-content-azure
# If using RHEL, ensure that subscription manager is registered prior to running.

- name: Upgrade all packages
  ansible.builtin.dnf:
    name: "*"
    state: latest

- name: Install required system packages
  ansible.builtin.dnf:
    name:
      - ssh
      - libvirt
      - "virt-install"
      - libguestfs
      - "libguestfs-tools"
    state: latest

- name: Install Hyper-V device drivers
  ansible.builtin.copy:
    src: hv.conf
    dest: /etc/dracut.conf.d/
    mode: '0644'

- name: Regenerate the initramfs image
  ansible.builtin.command:
    cmd: "dracut -f -v --regenerate-all"
  register: vm_to_azure_prep_regen_initramfs
  changed_when: vm_to_azure_prep_regen_initramfs.rc == 0
  failed_when: vm_to_azure_prep_regen_initramfs.rc != 0

- name: Reboot the server
  ansible.builtin.reboot:
    reboot_timeout: 120
  register: vm_to_azure_prep_reboot

- name: Install required cloud packages
  ansible.builtin.dnf:
    name:
      - "cloud-init"
      - "hyperv-daemons"
    state: latest

- name: Enable logging to the Hyper-V Data Exchange Service (KVP)
  ansible.builtin.copy:
    src: 10-azure-kvp.cfg
    dest: /etc/cloud/cloud.cfg.d/
    mode: '0644'

- name: Add Azure as a datasource
  ansible.builtin.copy:
    src: 91-azure_datasource.cfg
    dest: /etc/cloud/cloud.cfg.d/
    mode: '0644'

- name: Disable specific nouveau module
  ansible.builtin.lineinfile:
    path: /etc/modprobe.d/blocklist.conf
    regexp: ' nouveau'
    line: blacklist nouveau

- name: Disable specific lbm-nouveau module
  ansible.builtin.lineinfile:
    path: /etc/modprobe.d/blocklist.conf
    regexp: 'lbm-nouveau'
    line: blacklist lbm-nouveau

- name: Disable specific floppy module
  ansible.builtin.lineinfile:
    path: /etc/modprobe.d/blocklist.conf
    regexp: 'floppy'
    line: blacklist floppy

- name: Disable specific amdgpu module
  ansible.builtin.lineinfile:
    path: /etc/modprobe.d/blocklist.conf
    regexp: 'amdgpu'
    line: blacklist amdgpu

- name: Disable specific skx_edac module
  ansible.builtin.lineinfile:
    path: /etc/modprobe.d/blocklist.conf
    regexp: 'skx_edac'
    line: blacklist skx_edac

- name: Disable specific intel_cstate module
  ansible.builtin.lineinfile:
    path: /etc/modprobe.d/blocklist.conf
    regexp: 'intel_cstate'
    line: blacklist intel_cstate

- name: Remove network device rules
  ansible.builtin.file:
    path: /etc/udev/rules.d/70-persistent-net.rules
    state: absent

- name: Remove network device rules
  ansible.builtin.file:
    path: /etc/udev/rules.d/75-persistent-net-generator.rules
    state: absent

- name: Remove network device rules
  ansible.builtin.file:
    path: /etc/udev/rules.d/80-net-name-slot-rules
    state: absent

- name: Add Azure as a datasource
  ansible.builtin.copy:
    src: 68-azure-sriov-nm-unmanaged.rules
    dest: /etc/udev/rules.d/
    mode: '0644'

- name: Enable sshd
  ansible.builtin.systemd:
    name: sshd
    enabled: true

- name: Modify kernel boot parameters
  ansible.builtin.lineinfile:
    path: /etc/default/grub
    regexp: 'GRUB_CMDLINE_LINUX'
    line: 'GRUB_CMDLINE_LINUX="loglevel=3 crashkernel=auto console=tty1 console=ttyS0 earlyprintk=ttyS0 rootdelay=300"'

- name: Modify kernel boot parameters
  ansible.builtin.lineinfile:
    path: /etc/default/grub
    regexp: 'GRUB_TIMEOUT_STYLE'
    line: 'GRUB_TIMEOUT_STYLE=countdown'

- name: Modify kernel boot parameters
  ansible.builtin.lineinfile:
    path: /etc/default/grub
    regexp: 'GRUB_TERMINAL'
    line: 'GRUB_TERMINAL="serial console"'

- name: Modify kernel boot parameters
  ansible.builtin.lineinfile:
    path: /etc/default/grub
    regexp: 'GRUB_SERIAL_COMMAND'
    line: 'GRUB_SERIAL_COMMAND="serial --speed=115200 --unit=0 --word=8 --parity=no --stop=1"'

- name: Regenerate the grub.cfg file
  ansible.builtin.command:
    cmd: "grub2-mkconfig -o /boot/grub2/grub.cfg"
  register: vm_to_azure_prep_regen_grub
  changed_when: vm_to_azure_prep_regen_grub.rc == 0
  failed_when: vm_to_azure_prep_regen_grub.rc != 0

- name: Install required cloud packages
  ansible.builtin.dnf:
    name:
      - WALinuxAgent
    state: latest

- name: Enable sshd
  ansible.builtin.systemd:
    name: waagent
    enabled: true

- name: Modify waagent parameters
  ansible.builtin.lineinfile:
    path: /etc/waagent.conf
    regexp: 'Provisioning\.DeleteRootPassword'
    line: 'Provisioning.DeleteRootPassword=y'

- name: Modify waagent parameters
  ansible.builtin.lineinfile:
    path: /etc/waagent.conf
    regexp: 'ResourceDisk\.Format'
    line: 'ResourceDisk.Format=n'

- name: Modify waagent parameters
  ansible.builtin.lineinfile:
    path: /etc/waagent.conf
    regexp: 'ResourceDisk\.EnableSwap'
    line: 'ResourceDisk.EnableSwap=n'

- name: Clean up the existing provisioning details.
  ansible.builtin.command:
    cmd: "waagent -force -deprovision"
  register: vm_to_azure_prep_waagent_deprovision
  changed_when: vm_to_azure_prep_waagent_deprovision.rc == 0
  failed_when: vm_to_azure_prep_waagent_deprovision.rc != 0

- name: Delete user accounts
  when:
    - vm_to_azure_prep_users is defined
    - vm_to_azure_prep_users | length > 0
  ansible.builtin.user:
    name: "{{ item }}"
    state: absent
    remove: true
  loop: vm_to_azure_prep_users

- name: Clear history
  ansible.builtin.command:
    cmd: "export HISTSIZE=0"
  register: vm_to_azure_prep_clear_history
  changed_when: vm_to_azure_prep_clear_history.rc == 0
  failed_when: false
